import pandas as pd
import sys
import os
import pandas as pd

import test_utils
from filegen_utils import *
from IAA import *
from Dependency import *
from Weighting import *
import conftest


sys.path.append('../../')
# agreed answer of U will not be considered during the iaa, since l will be dealed in weighting, it will not tested here
def test_dep_sample_fail(config):
    iaa_files_path = test_utils.make_test_directory(config, 'dep_sample_Daniel')
    out_path = test_utils.make_test_directory(config, 'out_dep_sample_Daniel')
    weight_out_folder = test_utils.make_test_directory(config, 'out_weighting_dep_iaa_test')

    # source_task_id generated by smashing keyboard
    iaa = IAA_task(out_folder=iaa_files_path, source_task_id='dependency_testing')
    iaa.add_row({"agreed_Answer": 'U', "question_Number": 1, "namespace": 'Covid_Probability', 
                 'highlighted_indices': test_utils.make_highlight_indices(10,30)})
    iaa.add_row({"agreed_Answer": 3, "question_Number": 5, "namespace": 'Covid_Probability',  "agreement_score": 1})
    iaa.add_row({"agreed_Answer": 'U', "question_Number": 6, "namespace": 'Covid_Probability',  "agreement_score": 1})

    fin_path = iaa.export()

    
    data_path = config['data_dir']
    schema_path = data_path + '/schemas'
    dh_path = None #doesn't get used by dependency but is still an argument

    eval_dependency(dh_path, iaa_files_path, schema_path, out_path)

    for root, dir, files in os.walk(out_path):
        for file in files:
            #should be only 1 file for this case, so just run it on the only one
            # if there's more than 1 then you can get fancy
            out_df  = pd.read_csv(os.path.join(out_path, file), encoding='utf-8')
            print(out_df['agreed_Answer'].size)
            print("++++++++")
            assert out_df['agreed_Answer'].size == 1





def test_dep_sample_multiple_children(config):
    iaa_files_path = test_utils.make_test_directory(config, 'dep_sample_Daniel3')
    out_path = test_utils.make_test_directory(config, 'out_dep_sample_Daniel3')
    # source_task_id generated by smashing keyboard
    iaa = IAA_task(out_folder=iaa_files_path, source_task_id='kjncsa87nxao21899102j1j2')

    iaa.add_row({"agreed_Answer": 3, "question_Number": 6, "namespace": 'Covid_Probability',  "agreement_score": 1})
    iaa.add_row({"agreed_Answer": 1, "question_Number": 7, "namespace": 'Covid_Probability',  "agreement_score": 1}) 
    iaa.add_row({"agreed_Answer": 'U', "question_Number": 10, "namespace": 'Covid_Probability',  "agreement_score": 1}) 

    fin_path = iaa.export()
    data_path = config['data_dir']
    schema_path = data_path + '/schemas'
    dh_path = None #doesn't get used by dependency but is still an argument

    eval_dependency(dh_path, iaa_files_path, schema_path, out_path)

    for root, dir, files in os.walk(out_path):
        for file in files:
            #should be only 1 file for this case, so just run it on the only one
            # if there's more than 1 then you can get fancy
            out_df  = pd.read_csv(os.path.join(out_path, file), encoding='utf-8')
            print(len(out_df))
            print("++++++++")
            assert len(out_df) == 2

