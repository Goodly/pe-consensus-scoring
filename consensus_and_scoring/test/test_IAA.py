import sys
import os
import pandas as pd

import test_utils
from filegen_utils import *
from IAA import *

sys.path.append('../../')

def test_iaa_constructor(config, tmpdir):
    test_path = test_utils.make_test_directory(config, 'test_test_iaa_evi_q5')
    #source_task_id generated by smashing keyboard
    dh = datahunt(out_folder=test_path, source_task_id = 'owhdnoicaunhcio32ewda')
    dh.add_row({'answer_label': 'T1.Q2.A2', 'namespace': 'Covid2_Reasoning_2020_09_20', 'contributor_uuid':'Michael'})
    dh.add_row({'answer_label': 'T1.Q2.A2', 'namespace': 'Covid2_Reasoning_2020_09_20', 'contributor_uuid':'Dwight'})
    fin_path = dh.export()
    data_path = config['data_dir']
    schema_path = data_path+'/schemas'

    iaa_out = calc_agreement_directory(test_path, schema_path, config['IAA_config_dir'], test_utils.texts_dir, outDirectory = tmpdir)
    print(iaa_out)
    for root, dir, files in os.walk(iaa_out):
        for file in files:
            #should be only 1 file for this case, so just run it on the only one
            # if there's more than 1 then you can get fancy
            out_df  = pd.read_csv(os.path.join(iaa_out, file), encoding='utf-8')
    #9 answer choices to a checklist question
    assert len(out_df) == 6

def test_iaa_checklist(config, tmpdir):
    test_path = test_utils.make_test_directory(config, 'test_iaa_checklist_multi_pass')
    # source_task_id generated by smashing keyboard
    dh = datahunt(out_folder=test_path, source_task_id='apply_to_all')
    for i in range(5):
        dh.add_row({'answer_label': 'T1.Q2.A1', 'namespace': 'Covid2_Reasoning_2020_09_20',
                    'contributor_uuid': 'Daniel' + str(i)})
        dh.add_row({'answer_label': 'T1.Q2.A3', 'namespace': 'Covid2_Reasoning_2020_09_20',
                    'contributor_uuid': 'Daniel' + str(i)})
        dh.add_row({'answer_label': 'T1.Q2.A5', 'namespace': 'Covid2_Reasoning_2020_09_20',
                    'contributor_uuid': 'Daniel' + str(i)})
    fin_path = dh.export()

    data_path = config['data_dir']
    schema_path = data_path + '/schemas'

    iaa_out = calc_agreement_directory(test_path, schema_path, config['IAA_config_dir'], test_utils.texts_dir,
                                       outDirectory=tmpdir)
    print(iaa_out)
    for root, dir, files in os.walk(iaa_out):
        for file in files:
            # should be only 1 file for this case, so just run it on the only one
            # if there's more than 1 then you can get fancy
            out_df = pd.read_csv(os.path.join(iaa_out, file), encoding='utf-8')
            print(out_df['agreed_Answer'])
            temp = out_df['agreed_Answer'].tolist()
            assert int(temp[0]) == 1
            assert int(temp[2]) == 3
            assert int(temp[4]) == 5
            print("++++++++++++++")
            print(out_df['coding_perc_agreement'].tolist())
    # 9 answer choices to a checklist question
    # assert len(out_df) == 9


def test_iaa_checklist_maxans(config, tmpdir):
    test_path = test_utils.make_test_directory(config, 'test_iaa_checklist_max_ans')
    # source_task_id generated by smashing keyboard
    dh = datahunt(out_folder=test_path, source_task_id='apply_to_all')
    for i in range(5):
        dh.add_row({'answer_label': 'T1.Q2.A7' , 'namespace': 'Sources2021_02_23',
                    'contributor_uuid': 'mturk' + str(i)})
    for i in range(5):
        dh.add_row({'answer_label': 'T1.Q10.A7' , 'namespace': 'Sources2021_02_23',
                    'contributor_uuid': 'mturk' + str(i)})
    fin_path = dh.export()
    data_path = config['data_dir']
    schema_path = data_path + '/schemas'

    iaa_out = calc_agreement_directory(test_path, schema_path, config['IAA_config_dir'], test_utils.texts_dir,
                                       outDirectory=tmpdir)
    print(iaa_out)
    for root, dir, files in os.walk(iaa_out):
        for file in files:
            # should be only 1 file for this case, so just run it on the only one
            # if there's more than 1 then you can get fancy
            out_df = pd.read_csv(os.path.join(iaa_out, file), encoding='utf-8')
            print(out_df['agreed_Answer'])
            temp = out_df['agreed_Answer'].tolist()
            #for i in range(9):
                #assert temp[i] == 'L'
            print("++++++++++++++")
            print(out_df['coding_perc_agreement'].tolist())

def test_iaa_checklist_nopass(config, tmpdir):
    test_path = test_utils.make_test_directory(config, 'test_iaa_checklist_zero_pass')
    # source_task_id generated by smashing keyboard
    dh = datahunt(out_folder=test_path, source_task_id='apply_to_all')
    for i in range(6):
        print('A'+str(i+1))
        dh.add_row({'answer_label': 'T1.Q2.A' + str(i + 1), 'namespace': 'Covid2_Reasoning_2020_09_20',
                    'contributor_uuid': 'Daniel' + str(i)})
    fin_path = dh.export()

    data_path = config['data_dir']
    schema_path = data_path + '/schemas'

    iaa_out = calc_agreement_directory(test_path, schema_path, config['IAA_config_dir'], test_utils.texts_dir,
                                       outDirectory=tmpdir)
    print(iaa_out)
    for root, dir, files in os.walk(iaa_out):
        for file in files:
            # should be only 1 file for this case, so just run it on the only one
            # if there's more than 1 then you can get fancy
            out_df = pd.read_csv(os.path.join(iaa_out, file), encoding='utf-8')
            print(out_df['agreed_Answer'])
            temp = out_df['agreed_Answer'].tolist()
            for i in range(6):
                assert temp[i] == 'L' or temp[i] == 'M'
            print("++++++++++++++")
            print(out_df['coding_perc_agreement'].tolist())


def test_iaa_checklist_diff_agree(config, tmpdir):
    test_path = test_utils.make_test_directory(config, 'test_iaa_checklist_diff_agree')
    # source_task_id generated by smashing keyboard
    dh = datahunt(out_folder=test_path, source_task_id='apply_to_all')
    for i in range(9):
        for j in range(i + 1):
            dh.add_row({'answer_label': 'T1.Q2.A' + str(j), 'namespace': 'Covid2_Reasoning_2020_09_20',
                        'contributor_uuid': 'Daniel' + str(i)})
    fin_path = dh.export()

    data_path = config['data_dir']
    schema_path = data_path + '/schemas'

    iaa_out = calc_agreement_directory(test_path, schema_path, config['IAA_config_dir'], test_utils.texts_dir,
                                       outDirectory=tmpdir)
    print(iaa_out)
    for root, dir, files in os.walk(iaa_out):
        for file in files:
            # should be only 1 file for this case, so just run it on the only one
            # if there's more than 1 then you can get fancy
            out_df = pd.read_csv(os.path.join(iaa_out, file), encoding='utf-8')
            print(out_df['agreed_Answer'])
            temp = out_df['agreed_Answer'].tolist()
            assert int(temp[0]) == 1
            assert int(temp[2]) == 3
            assert out_df['agreement_score'][0] != out_df['agreement_score'][3]
            print("++++++++++++++")
            print(out_df['agreement_score'].tolist())

def test_checklist_coding_multiple_hl(config):
    test_path = test_utils.make_test_directory(config, 'test_iaa_checklist_coding_multiple_hl')
    out_path = test_utils.make_test_directory(config, 'out_test_iaa_checklist_coding_multiple_hl')
    # source_task_id generated by smashing keyboard
    dh = datahunt(out_folder=test_path, source_task_id='highlights')

    dh.add_row({'answer_label': 'T1.Q2.A2' , 'namespace': 'Covid2_Reasoning_2020_09_20',
                    'contributor_uuid': 'C1', 'start_pos': 0, 'end_pos': 20})
    dh.add_row({'answer_label': 'T1.Q2.A2' , 'namespace': 'Covid2_Reasoning_2020_09_20',
                    'contributor_uuid': 'C1', 'start_pos': 30, 'end_pos': 80})
    dh.add_row({'answer_label': 'T1.Q2.A4', 'namespace': 'Covid2_Reasoning_2020_09_20',
                'contributor_uuid': 'C1', 'start_pos': 30, 'end_pos': 80})
    dh.add_row({'answer_label': 'T1.Q2.A4', 'namespace': 'Covid2_Reasoning_2020_09_20',
                'contributor_uuid': 'C2', 'start_pos': 30, 'end_pos': 80})
    dh.add_row({'answer_label': 'T1.Q2.A4', 'namespace': 'Covid2_Reasoning_2020_09_20',
                'contributor_uuid': 'C3', 'start_pos': 30, 'end_pos': 80})
    dh.add_row({'answer_label': 'T1.Q2.A4', 'namespace': 'Covid2_Reasoning_2020_09_20',
                'contributor_uuid': 'C5', 'start_pos': 30, 'end_pos': 80})
    fin_path = dh.export()

    data_path = config['data_dir']
    schema_path = data_path + '/schemas'

    # out_path = test_utils.make_test_directory(config, 'out_iaa_hl_everythingpass')
    iaa_out = calc_agreement_directory(test_path, schema_path, config['IAA_config_dir'], test_utils.texts_dir,
                                       outDirectory=out_path)
    for root, dir, files in os.walk(out_path):
        for file in files:
            # should be only 1 file for this case, so just run it on the only one
            # if there's more than 1 then you can get fancy
            out_df = pd.read_csv(os.path.join(iaa_out, file), encoding='utf-8')
    out_df['agreed_Answer'] = out_df['agreed_Answer'].apply(str)
    answers = out_df['agreed_Answer']
    print('answers', answers.isin([4]))
    assert not answers.isin(['2']).any()
    assert len(out_df) == 6
    assert answers.isin(['4']).any()
    row_4 = out_df[out_df['agreed_Answer'] == '4']
    print(row_4.columns)

    print("row 4\n", row_4)
    print(row_4['highlighted_indices'])
    r4_hl = row_4['highlighted_indices'].iloc[0]
    assert all([str(i) in r4_hl for i in range(30,80)])