import sys
import os
import pandas as pd

import test_utils
from filegen_utils import *
from IAA import *

sys.path.append('../../')

def test_iaa_constructor(config, tmpdir):
    test_path = test_utils.make_test_directory(config, 'test_test_iaa_evi_q5')
    #source_task_id generated by smashing keyboard
    dh = datahunt(out_folder=test_path, source_task_id = 'owhdnoicaunhcio32ewda')
    dh.add_row({'answer_label': 'T1.Q2.A2', 'namespace': 'Covid_Evidence2020_03_21', 'contributor_uuid':'Michael'})
    dh.add_row({'answer_label': 'T1.Q2.A2', 'namespace': 'Covid_Evidence2020_03_21', 'contributor_uuid':'Dwight'})
    fin_path = dh.export()
    data_path = config['data_dir']
    schema_path = data_path+'/schemas'

    iaa_out = calc_agreement_directory(test_path, schema_path, config['IAA_config_dir'], test_utils.texts_dir, outDirectory = tmpdir)
    print(iaa_out)
    for root, dir, files in os.walk(iaa_out):
        for file in files:
            #should be only 1 file for this case, so just run it on the only one
            # if there's more than 1 then you can get fancy
            out_df  = pd.read_csv(os.path.join(iaa_out, file), encoding='utf-8')
    #9 answer choices to a checklist question
    assert len(out_df) == 9


def test_iaa_checklist(config, tmpdir):
    test_path = test_utils.make_test_directory(config, 'test_iaa_checklist_multi_pass')
    # source_task_id generated by smashing keyboard
    dh = datahunt(out_folder=test_path, source_task_id='apply_to_all')
    for i in range(5):
        dh.add_row({'answer_label': 'T1.Q2.A1', 'namespace': 'Covid_Evidence2020_03_21',
                    'contributor_uuid': 'Daniel' + str(i)})
        dh.add_row({'answer_label': 'T1.Q2.A3', 'namespace': 'Covid_Evidence2020_03_21',
                    'contributor_uuid': 'Daniel' + str(i)})
        dh.add_row({'answer_label': 'T1.Q2.A5', 'namespace': 'Covid_Evidence2020_03_21',
                    'contributor_uuid': 'Daniel' + str(i)})
    fin_path = dh.export()

    data_path = config['data_dir']
    schema_path = data_path + '/schemas'

    iaa_out = calc_agreement_directory(test_path, schema_path, config['IAA_config_dir'], test_utils.texts_dir,
                                       outDirectory=tmpdir)
    print(iaa_out)
    for root, dir, files in os.walk(iaa_out):
        for file in files:
            # should be only 1 file for this case, so just run it on the only one
            # if there's more than 1 then you can get fancy
            out_df = pd.read_csv(os.path.join(iaa_out, file), encoding='utf-8')
            print(out_df['agreed_Answer'])
            temp = out_df['agreed_Answer'].tolist()
            assert int(temp[0]) == 1
            assert int(temp[2]) == 3
            assert int(temp[4]) == 5
            print("++++++++++++++")
            print(out_df['coding_perc_agreement'].tolist())
    # 9 answer choices to a checklist question
    # assert len(out_df) == 9


def test_iaa_checklist_nopass(config, tmpdir):
    test_path = test_utils.make_test_directory(config, 'test_iaa_checklist_zero_pass')
    # source_task_id generated by smashing keyboard
    dh = datahunt(out_folder=test_path, source_task_id='apply_to_all')
    for i in range(9):
        dh.add_row({'answer_label': 'T1.Q2.A' + str(i + 1), 'namespace': 'Covid_Evidence2020_03_21',
                    'contributor_uuid': 'Daniel' + str(i)})
    fin_path = dh.export()

    data_path = config['data_dir']
    schema_path = data_path + '/schemas'

    iaa_out = calc_agreement_directory(test_path, schema_path, config['IAA_config_dir'], test_utils.texts_dir,
                                       outDirectory=tmpdir)
    print(iaa_out)
    for root, dir, files in os.walk(iaa_out):
        for file in files:
            # should be only 1 file for this case, so just run it on the only one
            # if there's more than 1 then you can get fancy
            out_df = pd.read_csv(os.path.join(iaa_out, file), encoding='utf-8')
            print(out_df['agreed_Answer'])
            temp = out_df['agreed_Answer'].tolist()
            for i in range(9):
                assert temp[i] == 'L'
            print("++++++++++++++")
            print(out_df['coding_perc_agreement'].tolist())


def test_iaa_checklist_diff_agree(config, tmpdir):
    test_path = test_utils.make_test_directory(config, 'test_iaa_checklist_diff_agree')
    # source_task_id generated by smashing keyboard
    dh = datahunt(out_folder=test_path, source_task_id='apply_to_all')
    for i in range(9):
        for j in range(i + 1):
            dh.add_row({'answer_label': 'T1.Q2.A' + str(j), 'namespace': 'Covid_Evidence2020_03_21',
                        'contributor_uuid': 'Daniel' + str(i)})
    fin_path = dh.export()

    data_path = config['data_dir']
    schema_path = data_path + '/schemas'

    iaa_out = calc_agreement_directory(test_path, schema_path, config['IAA_config_dir'], test_utils.texts_dir,
                                       outDirectory=tmpdir)
    print(iaa_out)
    for root, dir, files in os.walk(iaa_out):
        for file in files:
            # should be only 1 file for this case, so just run it on the only one
            # if there's more than 1 then you can get fancy
            out_df = pd.read_csv(os.path.join(iaa_out, file), encoding='utf-8')
            print(out_df['agreed_Answer'])
            temp = out_df['agreed_Answer'].tolist()
            assert int(temp[0]) == 1
            assert int(temp[2]) == 3
            assert out_df['agreement_score'][0] != out_df['agreement_score'][3]
            print("++++++++++++++")
            print(out_df['agreement_score'].tolist())


# #ordinal tests use input data in the test_data_persistent folder
# def test_coding_ordinal_evidence(config):
#     questions=["T1.Q8","T1.Q10","T1.Q11","T1.Q12","T1.Q13","T1.Q14"]
#     qn=[8,10,11,12,13,14]
#     answers=["T1.Q8.A3","T1.Q10.A3","T1.Q11.A3","T1.Q12.A3","T1.Q13.A5","T1.Q14.A7"]
#     up_answers=["T1.Q8.A2","T1.Q10.A2","T1.Q11.A2","T1.Q12.A2","T1.Q13.A4","T1.Q14.A6"]
#     down_answers=["T1.Q8.A1","T1.Q10.A1","T1.Q11.A1","T1.Q12.A1","T1.Q13.A3","T1.Q14.A5"]
#     my_test_folder = config['persistent_test_dir']+'calcscore_iaa_distance_ordinal/'
#     for i in range(len(answers)):
#         file=pd.read_csv(my_test_folder+"/test_coding_input_evidence/"+"Covid_Evidencev1-Task-2224-DataHunt.csv")
#         file=file[file["question_label"]==questions[i]]
#         file=file.replace({"answer_label":up_answers[i]},answers[i])
#         file.to_csv(my_test_folder+"test_coding_input_evidence/up/"+"Covid_Evidencev1-Task-2224-DataHunt.csv")

#         out_path = my_test_folder+"test_coding_ordinal_evidence"
#         texts_dir = '../../data/texts/'
#         config_path = '../config/'
#         schema = "../../data/schemas//45dce5251bd3ea6e908fa33ac9e6a8e17e6830215912ce1626cf4206e159819c.csv"
#         file = my_test_folder+"test_coding_input_evidence/Covid_Evidencev1-Task-2224-DataHunt.csv"
#         a = calc_scores(file, config_path, texts_dir, schemaFile=schema, outDirectory=out_path,
#                         directory='../../test_data/calcscore_iaa_distance_ordinal/test_coding_input_evidence')
#         for root, dir, files in os.walk(a):
#             for f in files:
#                 if f.endswith('.csv'):
#                     result = pd.read_csv(a + f)
#         result = result[result["question_Number"] == qn[i]]
#         agreement_score = result["agreement_score"].iloc[0]

#         out2 = my_test_folder+"test_coding_ordinal_evidence/up"
#         file2 = my_test_folder+"test_coding_input_evidence/up/Covid_Evidencev1-Task-2224-DataHunt.csv"
#         c = calc_scores(file2, config_path, texts_dir, schemaFile=schema, outDirectory=out2,
#                         directory='../../test_data/calcscore_iaa_distance_ordinal/test_coding_input_evidence/up')
#         for root, dir, files in os.walk(c):
#             for f in files:
#                 if f.endswith('.csv'):
#                     result2 = pd.read_csv(c + f)
#         result2 = result2[result2["question_Number"] == qn[i]]
#         agreement_score2 = result2["agreement_score"].iloc[0]
#         assert agreement_score<agreement_score2

#         file3 = pd.read_csv(my_test_folder+"test_coding_input_evidence/" + "Covid_Evidencev1-Task-2224-DataHunt.csv")
#         file3 = file3[file3["question_label"] == questions[i]]
#         file3 = file3.replace({"answer_label": up_answers[i]}, down_answers[i])
#         file3.to_csv(my_test_folder+"test_coding_input_evidence/down/" + "Covid_Evidencev1-Task-2224-DataHunt.csv")

#         out3 = my_test_folder+"test_coding_ordinal_evidence/down"
#         file4 = my_test_folder+"test_coding_input_evidence/down/Covid_Evidencev1-Task-2224-DataHunt.csv"
#         b = calc_scores(file4, config_path, texts_dir, schemaFile=schema, outDirectory=out3,
#                         directory=my_test_folder+"test_coding_input_evidence/down")
#         for root, dir, files in os.walk(b):
#             for f in files:
#                 if f.endswith('.csv'):
#                     result3 = pd.read_csv(b + f)
#         result3 = result3[result3["question_Number"] == qn[i]]
#         agreement_score3 = result3["agreement_score"].iloc[0]
#         assert agreement_score3 < agreement_score
#         assert agreement_score < agreement_score2


# def test_coding_ordinal_probability(config):
#     questions = ["T1.Q1", "T1.Q11"]
#     qn = [1, 11]
#     answers = ["T1.Q1.A3", "T1.Q11.A4"]
#     up_answers = ["T1.Q1.A2", "T1.Q11.A3"]
#     down_answers = ["T1.Q1.A1", "T1.Q11.A2"]
#     my_test_folder = config['persistent_test_dir'] + 'calcscore_iaa_distance_ordinal/'
#     for i in range(len(answers)):
#         file = pd.read_csv(
#             my_test_folder+"test_coding_input_probability/" + "Covid_Probabilityv1-Task-2231-DataHunt.csv")
#         file = file[file["question_label"] == questions[i]]
#         file = file.replace({"answer_label": up_answers[i]}, answers[i])

#         file.to_csv(
#             my_test_folder+"test_coding_input_probability/up/" + "Covid_Probabilityv1-Task-2231-DataHunt.csv")

#         out_path = my_test_folder+"test_coding_ordinal_probability"
#         texts_dir = '../../data/texts/'
#         config_path = '../config/'
#         schema = "../../data/schemas//d5f24573a7077ee3ebb203ca64f955a8c5d5a6c6b25aa65e1bfa6fa71d1311f2.csv"
#         file = my_test_folder+ "test_coding_input_probability/Covid_Probabilityv1-Task-2231-DataHunt.csv"
#         a = calc_scores(file, config_path, texts_dir, schemaFile=schema, outDirectory=out_path,
#                         directory=my_test_folder+'/test_coding_input_probability')
#         for root, dir, files in os.walk(a):
#             for f in files:
#                 if f.endswith('.csv'):
#                     result = pd.read_csv(a + f)
#         result = result[result["question_Number"] == qn[i]]
#         agreement_score = result["agreement_score"].iloc[0]

#         out2 = my_test_folder+"test_coding_input_probability/" + "up"
#         file2 = my_test_folder+"test_coding_input_probability/" + "/up/Covid_Probabilityv1-Task-2231-DataHunt.csv"
#         print(i)
#         c = calc_scores(file2, config_path, texts_dir, schemaFile=schema, outDirectory=out2,
#                         directory='../../test_data/calcscore_iaa_distance_ordinal/test_coding_input_probability/up')
#         for root, dir, files in os.walk(c):
#             for f in files:
#                 if f.endswith('.csv'):
#                     result2 = pd.read_csv(c + f)
#         result2 = result2[result2["question_Number"] == qn[i]]
#         agreement_score2 = result2["agreement_score"].iloc[0]
#         print(i)
#         assert agreement_score <= agreement_score2

#         file3 = pd.read_csv(
#             my_test_folder+ "test_coding_input_probability/" + "Covid_Probabilityv1-Task-2231-DataHunt.csv")
#         file3 = file3[file3["question_label"] == questions[i]]
#         file3 = file3.replace({"answer_label": up_answers[i]}, down_answers[i])
#         file3.to_csv(
#             my_test_folder+ "test_coding_input_probability/down/" + "Covid_Probabilityv1-Task-2231-DataHunt.csv")

#         out3 = my_test_folder+"test_coding_ordinal_probability/down"
#         file4 =  my_test_folder+"/test_coding_input_probability/down/Covid_Probabilityv1-Task-2231-DataHunt.csv"
#         b = calc_scores(file4, config_path, texts_dir, schemaFile=schema, outDirectory=out3,
#                         directory= my_test_folder+'/test_coding_input_probability/down')
#         for root, dir, files in os.walk(b):
#             for f in files:
#                 if f.endswith('.csv'):
#                     result3 = pd.read_csv(b + f)
#         result3 = result3[result3["question_Number"] == qn[i]]
#         agreement_score3 = result3["agreement_score"].iloc[0]
#         assert agreement_score3 <= agreement_score